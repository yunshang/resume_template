{"version":3,"sources":["containers/Resume/Resume.tsx","containers/Education/Education.tsx","containers/Portfolio/Portfolio.tsx","containers/Technology/Technology.tsx","services/dateUtils.tsx","containers/Experience/Experience.tsx","containers/Card/Card.tsx","containers/About/About.tsx"],"names":["ResumeContainer","ResumeGrid","FixedContent","ScrollableContent","React","Component","styled","div","EducationContainer","props","state","educationToTimeline","this","requestEducation","newData","education","map","value","id","school","dateFrom","studyFrom","dateTo","studyTo","title","tagLine","degree","mainContent","setState","icon","data","defaultProps","connect","dispatch","bindActionCreators","educatioActions","PortfolioContainer","portfolioList","requestPortfolio","portfolio","el","isShow","key","PortfolioGridList","portfolioActions","TechnologyContainer","prop","toggleReference","referenceTechList","techList","requestTechnology","_","orderBy","technology","tech","name","toLowerCase","showMore","onClick","isMoreShown","exp","index","showskill","Project","Title","Content","MainContent","introduction","Item","duration","_duration","ind","Li","hideDurationText","technologyActions","Period","ul","li","p","getDuration","from","to","format","newFrom","moment","newTo","diff","years","Math","floor","remainder","returnString","months","diffYears","diffMonths","ExperienceContainer","generate","toggleAll","experience","reduce","newArr","obj","idx","workFrom","workTo","Present","dateDuration","dateUtils","subContent","SubContentMain","SubContentTag","technologies","newDataStruct","company","tagLineLink","company_website","description","push","experienceToTimeline","requestExperience","experienceActions","span","CardContainer","CardGrid","CardTitle","CardIcon","className","CardContent","children","show","i","AboutContainer","openFile","url","window","open","socialLinks","requestAbout","about","social_links","href","Fragment","AboutGrid","NameTitle","Name","last_name","email","Info","InfoIcon","skype","mobile","github","address","workYear","website","Url","aboutActions","img","a"],"mappings":"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","file":"static/js/1.15460be5.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport { AboutCard, ExperienceCard, TechnologyCard, EducationCard, PortfolioCard } from '../index';\n\nclass ResumeContainer extends React.Component {\n  render() {\n    return (\n      <ResumeGrid>\n        <FixedContent>\n          <AboutCard />\n        </FixedContent>\n        <ScrollableContent>\n          <EducationCard />\n          <ExperienceCard />\n          <TechnologyCard />\n          <PortfolioCard />\n        </ScrollableContent>\n      </ResumeGrid>\n    );\n  }\n}\n\nexport default ResumeContainer;\n\nconst ResumeGrid = styled.div`\n  display: grid;\n  grid-area: main-area;\n  grid-template-columns: 270px auto;\n  grid-column-gap: 10px;\n  @media only screen and (max-width: 599px) {\n    grid-template-columns: auto;\n  }\n`;\nconst ScrollableContent = styled.div`\n  margin-top: 10px;\n  @media only screen and (min-width: 600px) {\n    height: 98vh;\n    overflow-y: scroll;\n  }\n`;\nconst FixedContent = styled.div`\n  margin: 10px;\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport { actions as educatioActions } from '../../sagaDucks/education/education';\nimport { Timeline } from '../../components';\nimport { Card } from '../index';\n\ninterface IProps {\n  requestEducation?: () => void,\n  education: IEducation[],\n} \n\ninterface IState {\n  educationToTimeline: IEducation[],\n  education?: IEducation\n}\n\ninterface IData {\n  id?: string,\n  dateFrom?: string,\n  dateTo?: string | JSX.Element,\n  title?: string,\n  tagLine?: string,\n  subContent?: JSX.Element,\n  dateDuration?: string,\n  mainContent?: string,\n  tagLineLink?: string,\n}\n\ninterface IEducation extends IData {\n  school?: string,\n  studyFrom?: string,\n  studyTo?: string,\n  degree?: string,\n}\n\nclass EducationContainer extends React.Component<IProps, IState> {\n  public static defaultProps: IProps = {\n    education: [],\n  }\n  constructor(props: IProps) {\n    super(props);\n    this.state = { educationToTimeline: [] };\n  }\n\n  componentWillMount() {\n    if (this.props.requestEducation) {\n      this.props.requestEducation();\n    }\n  }\n\n  componentWillReceiveProps(props: IProps) {\n    const newData = props.education.map((value: IEducation) => {\n      const newDataStruct: IEducation = {\n        id: value.school,\n        dateFrom: value.studyFrom,\n        dateTo: value.studyTo,\n        title: value.title,\n        tagLine: value.degree,\n        mainContent: value.mainContent,\n      };\n\n      return newDataStruct;\n    });\n    this.setState({ educationToTimeline: newData });\n  }\n  render() {\n    return (\n      <Card title=\"教育经验\" icon=\"icon-graduation-cap\">\n        <Timeline data={this.state.educationToTimeline} />\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => (\n  {\n    education: state.education.data,\n  }\n);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n    ...educatioActions,\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EducationContainer);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\n\nimport { actions as portfolioActions } from '../../sagaDucks/portfolio/portfolio';\nimport { PortfolioIcon } from '../../components';\nimport { Card } from '../index';\n\ninterface IPortfolio {\n  sumUp: string,\n  id: number,\n  isShow: boolean,\n}\n\ninterface IProps {\n  portfolio: IPortfolio[],\n  requestPortfolio: () => void,\n}\n\ninterface IState {\n  portfolioList?: JSX.Element[],\n}\nclass PortfolioContainer extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = { portfolioList: [] };\n  }\n  componentWillMount() {\n    this.props.requestPortfolio();\n  }\n  componentWillReceiveProps(props: IProps) {\n    const portfolioList = props.portfolio.map((value: IPortfolio) => {\n      let el = (<></>);\n      if (value.isShow) {\n        el = <PortfolioIcon data={value} key={value.id} />;\n      }\n      return el;\n    });\n    if (portfolioList) {\n      this.setState({\n        portfolioList,\n      });\n    };\n  }\n  render() {\n    return (\n      <Card title=\"个人总结\" icon=\"icon-folder-open\">\n        <PortfolioGridList>\n          {this.state.portfolioList}\n        </PortfolioGridList>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => (\n  {\n    portfolio: state.portfolio.data,\n  }\n);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n    ...portfolioActions,\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PortfolioContainer);\n\nconst PortfolioGridList = styled.div`\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport _ from 'lodash';\n\nimport { actions as technologyActions } from '../../sagaDucks/technology/technology';\nimport { TechIcon } from '../../components';\nimport { Card } from '../index';\n\ninterface IProps {\n  requestTechnology: () => void,\n  technology: ITechnology[],\n} \n\ninterface ITechnology extends ITech {\n  id: number,\n  name: string,\n  img_path: string,\n  showskill: boolean,\n  introduction: string,\n  duration: IDuration[],\n  referenceOnly: boolean,\n}\n\ninterface IState {\n  referenceTechList: ITechnology[],\n  techList: ITechnology[],\n  toggleReference: boolean,\n}\n\ninterface IDuration {\n  hideDurationText: string\n}\n\ninterface ITech {\n}\n\nclass TechnologyContainer extends React.Component<IProps, IState> {\n  constructor(prop: IProps) {\n    super(prop);\n    this.state = {\n      referenceTechList: [],\n      techList: [],\n      toggleReference: false,\n    };\n  }\n  componentWillMount() {\n    this.props.requestTechnology();\n  }\n  componentWillReceiveProps(props: IProps) {\n    const referenceTechList: ITechnology[] = [];\n    const techList = _.orderBy(props.technology, [tech => tech.name.toLowerCase()], ['asc']).map((tech: ITechnology) => {\n      return tech;\n    });\n    this.setState({\n      techList,\n    });\n  }\n  toggleReference = () => {\n    this.setState({\n      toggleReference: !this.state.toggleReference,\n    });\n  }\n  render() {\n    return (\n      <Card title=\"项目经历\" icon=\"icon-code\" showMore={false} onClick={() => this.toggleReference()} isMoreShown={true}>\n        {\n           _.orderBy(this.state.techList, [exp => exp.id], ['asc']).map((value, index) => {\n            if (value.showskill) {\n              return (\n                <Project key={index}>\n                  <Title>{value.name}</Title>\n                  <Content>\n                    <MainContent>{value.introduction}</MainContent>\n                  </Content>\n                  <Item>\n                    {\n                      value.duration.map((_duration, ind) =>{\n                        return (\n                          <Li key={ind}>{_duration.hideDurationText}</Li>\n                        )\n                      })\n                    }\n                  </Item>\n                </Project>\n              )\n            }\n          })\n        }\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => (\n  {\n    technology: state.technology.data,\n  }\n);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n    ...technologyActions,\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TechnologyContainer);\n\nconst TechIconsHolder = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill,100px);\n  justify-content: space-between;\n`;\n\nconst Period = styled.div`\n  grid-area: timeline-period;\n  -moz-border-radius: 50px/50px;\n  -webkit-border-radius: 50px 50px;\n  border-radius: 50px/50px;\n  border: solid 3px #FF6B6B;\n  width: 40%;\n  height: 40%;\n  margin: auto;\n  transition: background 0.3s ease-in-out, border 0.3s ease-in-out;\n`;\n\nconst Event = styled.div``;\nconst Item = styled.ul`\n  font-size: 14px;\n  padding-left: 30px;\n`;\nconst Project = styled.li`\n  display: contents;\n  grid-template-areas: \"timeline-marker timeline-event\";\n  grid-template-columns: 25px auto;\n  &:hover ${Period} {\n    background: #FF6B6B;\n  }\n`;\n\nconst Li = styled.li`\n  grid-template-areas: \"timeline-marker timeline-event\";\n  grid-template-columns: 25px auto;\n`;\n\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  // text-transform: uppercase;\n  margin-top: .5em;\n`;\n\nconst Content = styled.div`\n  margin-top: .9em;\n  font-size: 14px;\n`;\nconst MainContent = styled.p`\n  line-height: 22px;\n`;","import moment from 'moment';\n\nconst DATE_FORMAT = 'YYYY-MMM-DD';\n\n// To Do\nfunction diffYears(diff: number) {\n  const years = Math.floor(diff / 365);\n  const yearStr = (years > 1) ? '年' : '年';\n  const remainder = diff - (years * 365);\n  let returnString = `${years} ${yearStr}`;\n  if (remainder > 30) { // considered as month\n    const months = Math.floor(remainder / 30);\n    returnString += `, ${months} 月`;\n  }\n  return returnString;\n}\n\nfunction diffMonths(diff: number) {\n  // + 1 to include current month\n  const string = '月';\n  const months = Math.floor(diff / 30) + 1;\n  const newDiff = months;\n  return `${newDiff} ${(months > 1) ? `${string}` : string}`;\n}\n\n// check if date is 'Present'\nfunction isPresent(date: string) {\n  return date === 'Present';\n}\n\n/**\n *\n * @param {date} from\n * @param {date} to\n * @param {string} format - format of the dates passed\n */\nexport function getDuration(from: string, to: string, format: string) {\n  let duration;\n  // convert all dates into 1 format\n  const newFrom = moment(from, format).format(DATE_FORMAT);\n  // if date is 'Present' get current date\n  const newTo = (isPresent(to)) ?\n    moment().format(DATE_FORMAT) : moment(to, format).format(DATE_FORMAT);\n\n  // get days since it is the smallest then go up to biggest\n  const diff = moment(moment(newTo, DATE_FORMAT)).diff(moment(newFrom, DATE_FORMAT), 'days');\n  if (diff > 365) { // year as biggest unit\n    duration = diffYears(diff);\n  } else if (diff > 30) { // month as biggest unit\n    duration = diffMonths(diff);\n  } else { // day as biggest unit\n    duration = `${diff} 天`;\n  }\n\n  return duration;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport * as dateUtils from '../../services/dateUtils';\n\nimport { actions as experienceActions } from '../../sagaDucks/experience/experience';\nimport { Timeline } from '../../components';\nimport { Card } from '../index';\n\ninterface IProps {\n  requestExperience: () => void,\n  experience: IExperience[],\n}\ninterface IExperience {\n  workForm?: string,\n  workTo: string,\n  workFrom: string,\n  technologies?: string,\n  id?: string,\n  dateFrom?: string,\n  dateDuration?: string,\n  dateTo?: string | JSX.Element,\n  title?: string,\n  company_website?: string,\n  description?: string,\n  company?: string,\n  tagLine?: string,\n  tagLineLink?: string,\n  mainContent?: string,\n  subContent?: JSX.Element,\n}\n\ninterface IState {\n  experienceToTimeline: IExperience[],\n  toggleAll: boolean,\n}\n\nclass ExperienceContainer extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = {\n      experienceToTimeline: [],\n      toggleAll: true,\n    };\n  }\n\n  componentWillMount() {\n    this.props.requestExperience();\n    this.generate(this.props, this.state.toggleAll);\n  }\n\n  componentWillReceiveProps(props: IProps) {\n    this.generate(props, this.state.toggleAll);\n  }\n\n  generate = (props: IProps, toggleAll: boolean) => {\n    // manipulate experience data to match timeline expected data\n    const newData = _.orderBy(props.experience, [exp => exp.id], ['asc']).reduce((newArr: IExperience[], obj, idx) => {\n      const dateFrom = moment(obj.workFrom, 'YYYY-MM-DD').format('YYYY-MM-DD');\n      const dateTo = (obj.workTo !== 'Present') ?\n        moment(obj.workTo, 'YYYY-MM-DD').format('YYYY-MM-DD') : (<Present />);\n\n      const dateDuration = dateUtils.getDuration(obj.workFrom, obj.workTo, 'YYYY-MM-DD');\n      const subContent = (\n        <div>\n          <SubContentMain>技术使用:</SubContentMain>\n          <SubContentTag>{obj.technologies}</SubContentTag>\n        </div>\n      );\n      const newDataStruct: IExperience = {\n        id: obj.id,\n        dateFrom,\n        dateTo,\n        dateDuration,\n        workFrom: obj.workFrom,\n        workTo: obj.workTo,\n        title: obj.title,\n        tagLine: obj.company,\n        tagLineLink: obj.company_website,\n        mainContent: obj.description,\n        subContent,\n      };\n\n      // if (toggleAll || idx < 1) {\n        newArr.push(newDataStruct);\n      // }\n\n      return newArr;\n    }, []);\n    this.setState({ experienceToTimeline: newData });\n  }\n  toggleAll = () => {\n    this.setState(\n      { toggleAll: !this.state.toggleAll },\n      () => this.generate(this.props, this.state.toggleAll),\n    );\n  }\n  render() {\n    return (\n      <Card title=\"工作经历\" icon=\"icon-suitcase\" showMore={true} isMoreShown={true}>\n        <Timeline data={this.state.experienceToTimeline} />\n      </Card>\n    );\n  }\n}\n\ninterface MData {\n  data: IExperience,\n}\n\ninterface MState {\n  experience: MData,\n}\n\nconst mapStateToProps = (state: any) => (\n  {\n    experience: state.experience.data,\n  }\n);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n    ...experienceActions,\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExperienceContainer);\n\nconst Present = styled.span`\n  &:before {\n          color: #B52E31;\n  content: '至今';\n}\n`;\nconst SubContentMain = styled.div`\n  font-size: 12px;\n  font-weight: bold;\n`;\nconst SubContentTag = styled.div`\n  font-size: 11px;\n`;","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Divider } from '../../components';\n\ninterface IProps {\n  readonly showMore: boolean,\n  icon?: string,\n  title?: string,\n  onClick?: () => void,\n  isMoreShown: boolean,\n  readonly show: boolean,\n} \n\ninterface IState {\n}\n\nclass CardContainer extends React.Component<IProps, IState> {\n  public static defaultProps: IProps = {\n    showMore: false,\n    isMoreShown: false,\n    show: false,\n  }\n  render() {\n    return (\n      <CardGrid showMore={this.props.showMore}>\n        <Content showMore={this.props.showMore}>\n          <CardTitle><CardIcon className={this.props.icon} />{this.props.title}</CardTitle>\n          <Divider />\n          <CardContent>\n            {this.props.children}\n          </CardContent>\n        </Content>\n      </CardGrid>\n    );\n  }\n}\n\nexport default CardContainer;\n\nconst Content = styled.div<{showMore: boolean}>`\n  padding: 10px 40px 10px;\n`;\n\nconst Action = styled(\"div\")<{show: boolean}>`\n  position: relative;\n  width: 100%;\n  font-size: 12px;\n  height: 30px;\n  background: #D25255;\n  margin: 0 auto;\n  overflow: hidden;\n  z-index: 1;\n  cursor: pointer;\n  transition: color .3s;\n  line-height: 30px;\n  text-align: center;\n  color: #fff;\n  text-transform: uppercase;\n  display: ${props => (props.show ? 'block' : 'none')};\n  font-weight: bold;\n`;\n\nconst CardGrid = styled.div<{showMore: boolean}>`\n  background: #fff;\n  margin: 0px 10px 10px;\n  box-shadow: 0 1px 6px rgba(0,0,0,.12), 0 1px 4px rgba(0,0,0,.24);\n  min-height: 200px;\n  overflow: hidden;\n  padding-bottom: ${props => (props.showMore ? '-1px' : '10px')};\n`;\nconst CardTitle = styled.span`\n  font-size: 20px;\n  font-weight: bold;\n  text-transform: uppercase;\n  margin-bottom: 15px;\n  display: block;\n`;\nconst CardContent = styled.div`\n  // margin-top: 20px;\n`;\nconst CardIcon = styled.i`\n  font-size: 25px;\n  padding-right: 10px;\n`;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport _ from 'lodash';\n\nimport { actions as aboutActions } from '../../sagaDucks/about/about';\n\nimport { Button, IconLink } from '../../components';\n\ninterface IAbout {\n  social_links?: IValue[],\n  email?: string,\n  skype?: string,\n  mobile?: string,\n  address?: string,\n  website?: string,\n  first_name?: string,\n  last_name?: string,\n  role?: string,\n  pdf_url?: string,\n  updated_at?: string,\n  data?: IAbout,\n  github?: string,\n  workYear?: string,\n}\n\ninterface IProps {\n  requestAbout: () => void,\n  about: IAbout,\n} \n\ninterface IState {\n  socialLinks?: JSX.Element[],\n  about?: IAbout,\n}\n\ninterface IValue {\n  show: boolean,\n  name: string,\n  url: string,\n  icon: string,\n}\n\nclass AboutContainer extends React.Component<IProps, IState> {\n  constructor(props: IProps) {\n    super(props);\n    this.state = { socialLinks: [] };\n  }\n  componentWillMount() {\n    this.props.requestAbout();\n  }\n  componentWillReceiveProps(props: IProps) {\n    const socialLinks = _.orderBy(props.about.social_links, ['order'], ['asc']).map((value: IValue) => {\n      let el: JSX.Element = (<></>);\n      if (value.show) {\n        el = (\n          <li key={value.name}><IconLink href={value.url} icon={value.icon} /></li>\n        );\n      }\n      return el;\n    });\n    this.setState({ socialLinks });\n  }\n  // Class Properties (Stage 3 Proposal)\n  openFile = (url: string) => {\n    window.open(url);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <AboutGrid>\n          <NameTitle>\n            <Name>\n              {this.props.about.last_name}\n            </Name>\n            {/* <Title>{this.props.about.role}</Title> */}\n          </NameTitle>\n          {this.props.about.email ? <Info>{this.props.about.email}<InfoIcon className=\"icon-mail\" /></Info> : null}\n          {this.props.about.skype ? <Info>{this.props.about.skype}<InfoIcon className=\"icon-skype\" /></Info> : null}\n          {this.props.about.mobile ? <Info>{this.props.about.mobile}<InfoIcon className=\"icon-phone\" /></Info> : null}\n          {this.props.about.github ? <Info>{this.props.about.github}<InfoIcon className=\"icon-github-circled\" /></Info> : null}\n          {this.props.about.address ? <Info>{this.props.about.address}<InfoIcon className=\"icon-home\" /></Info> : null}\n          {this.props.about.workYear ? <Info>{this.props.about.workYear}<InfoIcon className=\"icon-user\" /></Info> : null}\n          {this.props.about.website ? <Info><Url href={this.props.about.website}>{this.props.about.website}<InfoIcon className=\"icon-rocket\" /></Url></Info> : null}\n          {/* <AboutFooter>\n            <SocialLinks>\n              {this.state.socialLinks}\n            </SocialLinks>\n          </AboutFooter> */}\n        </AboutGrid>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => (\n  {\n    about: state.about ? state.about.data : {},\n  }\n);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  ...bindActionCreators({\n    ...aboutActions,\n  }, dispatch),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AboutContainer);\n\nconst AboutGrid = styled.div`\n  box-shadow: 0 1px 1px 0 rgba(0,0,0,.12),0 1.5px 1px 0 rgba(0,0,0,.24) !important;\n  background: white;\n  text-align: right;\n`;\nconst AvatarSection = styled.div`\n  text-align: center;\n`;\nconst Avatar = styled.img`\n  vertical-align: middle;\n  /* height: auto; */\n  /* remove when using the smiley avatar */\n  width: 100%;\n`;\nconst NameTitle = styled.div`\n  background: #B52E31;\n  color: white;\n  text-transform: uppercase;\n  padding: 15px 25px;\n  font-weight: bold;\n`;\nconst Name = styled.div`\n  font-size: 25px;\n`;\nconst LastName = styled.span`\n  margin-left: 5px;\n  color: #333131;\n`;\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n`;\nconst Info = styled.div`\n  background: #33373D;\n  color: #85878B;\n  padding: 7px 25px;\n  font-size: 12px;\n  border-bottom: 1px solid #26292e;\n  font-weight: bold;\n`;\nconst AboutFooter = styled.div`\n  margin-top: 12px;\n  text-align: center;\n`;\nconst SocialLinks = styled.ul`\n  list-style: none;\n  margin: 0px;\n  padding: 0px;\n  li {\n    display: inline-block;\n    margin-right: 2px;\n    text-align: center;\n  }\n`;\nconst InfoIcon = styled.i`\n  margin-left: 5px;\n`;\nconst FooterTag = styled.div`\n  font-size: 12px;\n  color: #999;\n`;\nconst Url = styled.a`\n  color: #85878B;\n  text-decoration: none;\n`;"],"sourceRoot":""}