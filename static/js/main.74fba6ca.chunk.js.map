{"version":3,"sources":["components/Loading/Loading.tsx","components/Button/Button.tsx","components/IconLink/IconLink.tsx","components/Timeline/Timeline.tsx","components/TechIcon/TechIcon.tsx","components/Divider/Divider.tsx","components/PortfolioIcon/PortfolioIcon.tsx","sagaDucks/about/about.tsx","sagaDucks/education/education.tsx","sagaDucks/experience/experience.tsx","sagaDucks/portfolio/portfolio.tsx","sagaDucks/technology/technology.tsx","routes/ResumeLayout/ResumeLayout.tsx","loadableCons.tsx","routes/index.tsx","sagaDucks/_reducers.tsx","config.ts","sagaDucks/rsf.tsx","sagaDucks/about/aboutSaga.tsx","sagaDucks/experience/experienceSaga.tsx","sagaDucks/technology/technologySaga.tsx","sagaDucks/education/educationSaga.tsx","sagaDucks/portfolio/portfolioSaga.tsx","sagaDucks/_sagas.tsx","store.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["LoadingComponent","props","isLoading","style","position","paddingTop","left","error","timedOut","defaultProps","React","Component","Button","styled","button","IconLinkComponent","href","this","className","icon","IconLink","a","TimelineComponent","prop","state","events","data","map","value","Item","key","id","Marker","Period","Line","Event","dateFrom","dateTo","dateDuration","Duration","Title","title","TagLine","tagLineLink","target","tagLine","mainContent","Content","MainContent","subContent","setState","Timeline","ul","div","li","Date","span","p","TechIcon","TechImageContainer","TechImage","img","TechName","DividerComponent","CardDivider","hr","PortfolioIcon","PortfolioIconContainer","PortfolioTitle","sumUp","types","ABOUT_REQUEST","ABOUT_SUCCESS","ABOUT_FAIL","initialState","action","type","Object","assign","about","actions","requestAbout","EDUCATION_REQUEST","EDUCATION_SUCCESS","EDUCATION_FAIL","education","requestEducation","EXPERIENCE_REQUEST","EXPERIENCE_SUCCESS","EXPERIENCE_FAIL","experience","requestExperience","PORTFOLIO_REQUEST","PORTFOLIO_SUCCESS","PORTFOLIO_FAIL","portfolio","requestPortfolio","TECHNOLOGY_REQUEST","TECHNOLOGY_SUCCESS","TECHNOLOGY_FAIL","technology","requestTechnology","ResumeLayoutGrid","ResumeLayout","children","Resume","Loadable","loader","loading","Loading","AppRoute","Layout","rest","render","exact","path","combineReducers","firebaseApp","firebase","initializeApp","apiKey","config","authDomain","databaseURL","projectId","rsf","ReduxSagaFirebase","aboutWillFetch","call","database","read","put","aboutTypes","console","log","aboutSaga","takeLatest","experienceWillFetch","experienceTypes","experienceSaga","technologyWillFetch","technologyTypes","technologySaga","educationWillFetch","educationTypes","educationSaga","portfolioWillFetch","portfolioTypes","portfolioSaga","mySaga","all","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","createGlobalStyle","store","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kTASMA,EAAmB,SAACC,GAQxB,OAAIA,EAAMC,UACD,yBAAKC,MAPuB,CACnCC,SAAU,WACVC,WAAY,OACZC,KAAM,QAIC,cACEL,EAAMM,MACR,wDACEN,EAAMO,SACR,sDAEF,MAGTR,EAAiBS,aAAe,CAC9BF,MAAO,MAGMP,Q,6xBCpBeU,IAAMC,U,IAU9BC,EAASC,IAAOC,OAAV,K,sqBCFGC,E,uKANX,OACE,kBAAC,EAAD,CAAUC,KAAMC,KAAKhB,MAAMe,MAAM,uBAAGE,UAAWD,KAAKhB,MAAMkB,Y,GAHhCT,IAAMC,WAUhCS,EAAWP,IAAOQ,EAAV,K,0lEC0DCC,E,kDAvDb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IACDC,MAAQ,CAAEC,OAAQ,IAFC,E,sEAeAxB,GACxB,IAAMwB,EAASxB,EAAMyB,KAAKC,KAAI,SAACC,GA0B7B,OAvBE,kBAACC,EAAD,CAAMC,IAAKF,EAAMG,IACf,kBAACC,EAAD,KACE,kBAACC,EAAD,MACA,kBAACC,EAAD,OAEF,kBAACC,EAAD,KACE,kBAAC,EAAD,KAAOP,EAAMQ,SAAb,MAA0BR,EAAMS,OAC7BT,EAAMU,aAAe,kBAACC,EAAD,UAAaX,EAAMU,aAAnB,KAA+C,MAEvE,kBAACE,EAAD,KAAQZ,EAAMa,OACd,kBAACC,EAAD,KAAWd,EAAMe,YAA8B,uBAAG3B,KAAMY,EAAMe,YAAaC,OAAO,SAAShB,EAAMiB,SAAlEjB,EAAMiB,SAEnCjB,EAAMkB,YACJ,kBAACC,EAAD,KACE,kBAACC,EAAD,KAAcpB,EAAMkB,aACnBlB,EAAMqB,YAET,UAQZhC,KAAKiC,SAAS,CAAEzB,a,+BAGhB,OACE,kBAAC,EAAD,KACGR,KAAKO,MAAMC,Y,GAlDYf,IAAMC,WA0DhCwC,EAAWtC,IAAOuC,GAAV,KAKRnB,EAASpB,IAAOwC,IAAV,KAWNxB,EAAOhB,IAAOyC,GAAV,IAMErB,GAIND,EAASnB,IAAOwC,IAAV,KAONnB,EAAOrB,IAAOwC,IAAV,KAMJlB,EAAQtB,IAAOwC,IAAV,KACLE,EAAO1C,IAAO2C,KAAV,KAQJjB,EAAW1B,IAAO2C,KAAV,KAIRhB,EAAQ3B,IAAOwC,IAAV,KAMLX,EAAU7B,IAAOwC,IAAV,KAYPN,EAAUlC,IAAOwC,IAAV,KAGPL,EAAcnC,IAAO4C,EAAV,K,oiBCxIe/C,IAAMC,U,IAehC+C,EAAW7C,IAAOwC,IAAV,KAGRM,EAAqB9C,IAAOwC,IAAV,KAIlBO,EAAY/C,IAAOgD,IAAV,KAUTC,EAAWjD,IAAOwC,IAAV,K,wNCjCCU,E,uKANX,OACE,kBAACC,EAAD,U,GAHyBtD,IAAMC,WAU/BqD,EAAcnD,IAAOoD,GAAV,K,kdCMFC,G,uKARX,OACE,kBAACC,GAAD,KACE,kBAACC,GAAD,KAAiBnD,KAAKhB,MAAMyB,KAAK2C,Y,GAJb3D,IAAMC,WAY5BwD,GAAyBtD,IAAOwC,IAAV,MAStBe,IALkBvD,IAAOgD,IAAV,MAKEhD,IAAOuC,GAAV,Q,gCCpCpB,oEAAO,IAAMkB,EAAQ,CACnBC,cAAe,sBACfC,cAAe,sBACfC,WAAY,oBAGDC,EAAe,CAC1BhD,KAAM,IAQO,eAA4C,IAA3CF,EAA0C,uDAAlCkD,EAAcC,EAAoB,uCACxD,OAAQA,EAAOC,MACb,KAAKN,EAAME,cACT,OAAOK,OAAOC,OAAO,GAAItD,EAAO,CAC9BE,KAAMiD,EAAOI,QAEjB,QACE,OAAOvD,IAIN,IAAMwD,EAAU,CACrBC,aAAc,iBAAO,CAAEL,KAAMN,EAAMC,kB,gCC3BrC,oEAAO,IAAMD,EAAQ,CACjBY,kBAAmB,8BACnBC,kBAAmB,8BACnBC,eAAgB,4BAGLV,EAAe,CAC1BhD,KAAM,IAQO,eAA4C,IAA3CF,EAA0C,uDAAlCkD,EAAcC,EAAoB,uCACxD,OAAQA,EAAOC,MACb,KAAKN,EAAMa,kBACT,OAAON,OAAOC,OAAO,GAAItD,EAAO,CAC9BE,KAAMiD,EAAOU,YAEjB,QACE,OAAO7D,IAIN,IAAMwD,EAAU,CACrBM,iBAAkB,iBAAO,CAAEV,KAAMN,EAAMY,sB,gCC3B3C,oEAAO,IAAMZ,EAAQ,CACjBiB,mBAAoB,gCACpBC,mBAAoB,gCACpBC,gBAAiB,8BAGNf,EAAe,CAC1BhD,KAAM,IAQO,eAA4C,IAA3CF,EAA0C,uDAAlCkD,EAAcC,EAAoB,uCACxD,OAAQA,EAAOC,MACb,KAAKN,EAAMkB,mBACT,OAAOX,OAAOC,OAAO,GAAItD,EAAO,CAC9BE,KAAMiD,EAAOe,aAEjB,QACE,OAAOlE,IAIN,IAAMwD,EAAU,CACrBW,kBAAmB,iBAAO,CAAEf,KAAMN,EAAMiB,uB,gCC3B5C,oEAAO,IAAMjB,EAAQ,CACjBsB,kBAAmB,8BACnBC,kBAAmB,8BACnBC,eAAgB,4BAGLpB,EAAe,CAC1BhD,KAAM,IAQO,eAA4C,IAA3CF,EAA0C,uDAAlCkD,EAAcC,EAAoB,uCACxD,OAAQA,EAAOC,MACb,KAAKN,EAAMuB,kBACT,OAAOhB,OAAOC,OAAO,GAAItD,EAAO,CAC9BE,KAAMiD,EAAOoB,YAEjB,QACE,OAAOvE,IAIN,IAAMwD,EAAU,CACrBgB,iBAAkB,iBAAO,CAAEpB,KAAMN,EAAMsB,sB,gCC1B3C,oEAAO,IAAMtB,EAAQ,CACjB2B,mBAAoB,gCACpBC,mBAAoB,gCACpBC,gBAAiB,8BAGNzB,EAAe,CAC1BhD,KAAM,IAQO,eAA2C,IAA1CF,EAAyC,uDAAjCkD,EAAcC,EAAmB,uCACvD,OAAQA,EAAOC,MACb,KAAKN,EAAM4B,mBACT,OAAOrB,OAAOC,OAAO,GAAItD,EAAO,CAC9BE,KAAMiD,EAAOyB,aAEjB,QACE,OAAO5E,IAIN,IAAMwD,EAAU,CACrBqB,kBAAmB,iBAAO,CAAEzB,KAAMN,EAAM2B,uB,qrBCzB5C,IAAMK,EAAmBzF,IAAOwC,IAAV,KA+BPkD,E,kDAZb,WAAYhF,GAAe,uCACnBA,G,qDAGN,OACE,kBAAC+E,EAAD,KACGrF,KAAKhB,MAAMuG,c,GAPO9F,IAAMC,W,yBCR3B8F,GALQC,IAAS,CACrBC,OAAQ,kBAAM,oDACdC,QAASC,MAGIH,IAAS,CACrBC,OAAQ,kBAAM,4DACdC,QAASC,OCDNC,GDIaJ,IAAS,CAC1BC,OAAQ,kBAAM,4DACdC,QAASC,MAEQH,IAAS,CAC1BC,OAAQ,kBAAM,4DACdC,QAASC,MAEOH,IAAS,CACzBC,OAAQ,kBAAM,4DACdC,QAASC,MAEOH,IAAS,CACzBC,OAAQ,kBAAM,4DACdC,QAASC,MClBM,SAAC,GAAD,IAAGlG,EAAH,EAAGA,UAAWoG,EAAd,EAAcA,OAAWC,EAAzB,6CACf,kBAAC,IAAD,iBACMA,EADN,CAEEC,OAAQ,SAAAhH,GAAK,OACX,kBAAC8G,EAAD,KACE,kBAACpG,EAAcV,UAMR,oBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAUiH,OAAK,EAACC,KAAK,IAAIJ,OAAQR,EAAc5F,UAAW8F,O,wDCpBjDW,cAAgB,CAC7BrC,UACAM,cACAK,eACAK,cACAK,iB,kECba,EACH,0CADG,EAEC,uCAFD,EAGE,+CAHF,EAIA,wBCATiB,EAAcC,IAASC,cAAc,CACzCC,OAAQC,EACRC,WAAYD,EACZE,YAAaF,EACbG,UAAWH,IAKEI,EAFH,IAAIC,IAAkBT,G,WCNxBU,GAAV,SAAUA,IAAV,uEAEkB,OAFlB,kBAEwBC,eAAKH,EAAII,SAASC,KAAM,SAFhD,OAGI,OADMnD,EAFV,gBAGUoD,cAAI,CAAEvD,KAAMwD,IAAW5D,cAAeO,UAHhD,uDAKIsD,QAAQC,IAAR,MALJ,qDASA,IAIeC,EAJG,CAChBC,qBAAWJ,IAAW7D,cAAewD,I,WCV7BU,GAAV,SAAUA,IAAV,uEAEuB,OAFvB,kBAE6BT,eAAKH,EAAII,SAASC,KAAM,cAFrD,OAGI,OADMxC,EAFV,gBAGUyC,cAAI,CAAEvD,KAAM8D,IAAgBlD,mBAAoBE,eAH1D,4GASA,IAIeiD,EAJQ,CACrBH,qBAAWE,IAAgBnD,mBAAoBkD,I,YCVvCG,IAAV,SAAUA,KAAV,uEAEuB,OAFvB,kBAE6BZ,eAAKH,EAAII,SAASC,KAAM,UAFrD,OAGI,OADM9B,EAFV,gBAGU+B,cAAI,CAAEvD,KAAMiE,IAAgB3C,mBAAoBE,eAH1D,6GASA,IAIe0C,GAJQ,CACrBN,qBAAWK,IAAgB5C,mBAAoB2C,K,YCVvCG,IAAV,SAAUA,KAAV,uEAEsB,OAFtB,kBAE4Bf,eAAKH,EAAII,SAASC,KAAM,aAFpD,OAGI,OADM7C,EAFV,gBAGU8C,cAAI,CAAEvD,KAAMoE,IAAe7D,kBAAmBE,cAHxD,6GASA,IAIe4D,GAJO,CACpBT,qBAAWQ,IAAe9D,kBAAmB6D,K,YCVrCG,IAAV,SAAUA,KAAV,uEAEsB,OAFtB,kBAE4BlB,eAAKH,EAAII,SAASC,KAAM,aAFpD,OAGI,OADMnC,EAFV,gBAGUoC,cAAI,CAAEvD,KAAMuE,IAAetD,kBAAmBE,cAHxD,6GASA,IAIeqD,GAJO,CACpBZ,qBAAWW,IAAevD,kBAAmBsD,K,YCPtBG,IAAV,SAAUA,KAAV,iEACb,OADa,SACPC,cAAI,GAAD,mBACJf,GADI,YAEJI,GAFI,YAGJG,IAHI,YAIJG,IAJI,YAKJG,MANQ,wCCDf,IAAMG,GAAiBC,oBAGRC,eACbC,EACAC,YAAgBJ,K,mLAIlBA,GAAeK,IAAIP,ICNnBQ,YAAiB,MAQF,yBACb,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,EAAD,QCRgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASnD,OACP,kBAAC,IAAMoD,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAvK,GACL8H,QAAQ9H,MAAMA,EAAMwK,c","file":"static/js/main.74fba6ca.chunk.js","sourcesContent":["import React from 'react';\nimport CSS from 'csstype';\n\ninterface IProps {\n    isLoading: boolean,\n    error?: boolean,\n    timedOut: boolean,\n} \n\nconst LoadingComponent = (props: IProps) => {\n\n  const loadingStyle: CSS.Properties = {\n    position: 'absolute',\n    paddingTop: '45vh',\n    left: '50%',\n  };\n\n  if (props.isLoading) {\n    return <div style={loadingStyle}>Loading...</div>;\n  } else if (props.error) {\n    return <div>Something went wrong...</div>;\n  } else if (props.timedOut) {\n    return <div>Request timed out... </div>;\n  }\n  return null;\n};\n\nLoadingComponent.defaultProps = {\n  error: null,\n};\n\nexport default LoadingComponent;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  onClick: () => void,\n} \n\ninterface IState {\n} \n\n\nclass ButtonComponent extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <Button onClick={this.props.onClick}>{this.props.children}</Button>\n    );\n  }\n}\n\nexport default ButtonComponent;\n\nconst Button = styled.button`\n  /* Button General Style */\n  display: inline-block;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.42857143;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  -ms-touch-action: manipulation;\n  touch-action: manipulation;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  background-image: none;\n  border: 1px solid transparent;\n  border-radius: 4px;\n  margin: 10px 2px;\n  /* Button Specific Style */\n  font-size: 10px;\n  padding: 4px 10px;\n  margin-bottom: 5px;\n  background-color: #b52e31;\n  color: #fff;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  href: string,\n  icon: string,\n} \n\ninterface IState {\n} \n\nclass IconLinkComponent extends React.Component<IProps, IState>{\n  render() {\n    return (\n      <IconLink href={this.props.href}><i className={this.props.icon} /></IconLink>\n    );\n  }\n}\n\nexport default IconLinkComponent;\n\nconst IconLink = styled.a`\n  border: 2px solid #33373d;\n  color: #33373d;\n  display: inline-block;\n  height: 35px;\n  width: 35px;\n  border-radius: 50%;\n  transition: all .3s ease-in-out 0s;\n  transition-property: all;\n  transition-duration: 0.3s;\n  transition-timing-function: ease-in-out;\n  transition-delay: 0s;\n  -ms-transition: all .3s ease-in-out 0s;\n  -webkit-transition: all .3s ease-in-out 0s;\n  -moz-transition: all .3s ease-in-out 0s;\n  -o-transition: all .3s ease-in-out 0s;\n  &:hover {\n    border: 2px solid #B52E31;\n    color: #B52E31;\n  }\n  i {\n    line-height: 33px;\n    font-size: 14px;\n  }\n`;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n  data: IData[], \n}\n\ninterface IData {\n  id?: string,\n  dateFrom?: string,\n  dateTo?: string | JSX.Element,\n  title?: string,\n  tagLine?: string,\n  subContent?: JSX.Element,\n  dateDuration?: string,\n  mainContent?: string,\n  tagLineLink?: string,\n}\n\ninterface IState {\n  events: JSX.Element[]\n}\n\nclass TimelineComponent extends React.Component<IProps, IState> {\n  constructor(prop: IProps) {\n    super(prop);\n    this.state = { events: [] };\n  }\n  /**\n   *\n   * @param {number} id for key\n   * @param {*} dateFrom\n   * @param {*} dateTo\n   * @param {*} [dateDuration]\n   * @param {*} title\n   * @param {*} tagLine\n   * @param {*} [mainContent]\n   * @param {*} subContent custom component\n   */\n  componentWillReceiveProps(props: IProps) {\n    const events = props.data.map((value) => {\n      let el = null;\n      el = (\n        <Item key={value.id}>\n          <Marker>\n            <Period />\n            <Line />\n          </Marker>\n          <Event>\n            <Date>{value.dateFrom} - {value.dateTo}\n              {value.dateDuration ? <Duration> ({value.dateDuration})</Duration> : null}\n            </Date>\n            <Title>{value.title}</Title>\n            <TagLine>{!value.tagLineLink ? value.tagLine : <a href={value.tagLineLink} target=\"blank\">{value.tagLine}</a>}</TagLine>\n            {\n              value.mainContent ?\n                <Content>\n                  <MainContent>{value.mainContent}</MainContent>\n                  {value.subContent}\n                </Content> :\n                null\n            }\n          </Event>\n        </Item>\n      );\n\n      return el;\n    });\n    this.setState({ events });\n  }\n  render() {\n    return (\n      <Timeline>\n        {this.state.events}\n      </Timeline>\n    );\n  }\n}\n\nexport default TimelineComponent;\n\nconst Timeline = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\nconst Period = styled.div`\n  grid-area: timeline-period;\n  -moz-border-radius: 50px/50px;\n  -webkit-border-radius: 50px 50px;\n  border-radius: 50px/50px;\n  border: solid 3px #FF6B6B;\n  width: 40%;\n  height: 40%;\n  margin: auto;\n  transition: background 0.3s ease-in-out, border 0.3s ease-in-out;\n`;\nconst Item = styled.li`\n  display: grid;\n  grid-template-areas: \"timeline-marker timeline-event\";\n  grid-template-columns: 25px auto;\n  margin-bottom: 15px;\n  grid-column-gap: 20px;\n  &:hover ${Period} {\n    background: #FF6B6B;\n  }\n`;\nconst Marker = styled.div`\n  display: grid;\n  grid-template-areas:\n    \"timeline-period\"\n    \"timeline-line\";\n  grid-template-rows: 25px auto;\n`;\nconst Line = styled.div`\n  grid-area: timeline-line;\n  border-left: 3px solid #CCD5DB;\n  height: 100%;\n  margin: auto;\n`;\nconst Event = styled.div``;\nconst Date = styled.span`\n  font-size: 12px;\n  font-weight: 700;\n  letter-spacing: 1px;\n  margin: 0 0 .5em;\n  text-transform: uppercase;\n  white-space: nowrap;\n`;\nconst Duration = styled.span`\n  font-style: italic;\n  font-size: 10px;\n`;\nconst Title = styled.div`\n  font-weight: bold;\n  font-size: 16px;\n  // text-transform: uppercase;\n  margin-top: .5em;\n`;\nconst TagLine = styled.div`\n  font-size: 14px;\n  font-weight: bold;\n  color: #B52E31;\n  a {\n    color: #B52E31;\n    text-decoration: none;\n    &:hover {\n      border-bottom: 1px #B52E31 dashed;\n    }\n  }\n`;\nconst Content = styled.div`\n  font-size: 14px;\n`;\nconst MainContent = styled.p`\n  line-height: 22px;\n  margin: 10px 0;\n`;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ITech {\n  name: string,\n  img_path: string,\n  showSkill: boolean,\n  referenceOnly?: boolean,\n}\n\ninterface IProps {\n  tech: ITech,\n  key: string,\n} \n\ninterface IState {\n}\n\nclass TechIconComponent extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <TechIcon>\n        <TechImageContainer>\n          <TechImage src={this.props.tech.img_path} alt=\"\" />\n        </TechImageContainer>\n        <TechName>{this.props.tech.name}</TechName>\n      </TechIcon>\n    );\n  }\n}\n\nexport default TechIconComponent;\n\nconst TechIcon = styled.div`\n  text-align: center;\n`;\nconst TechImageContainer = styled.div`\n  height: 70px;\n  position: relative;\n`;\nconst TechImage = styled.img`\n  max-height: 60%;\n  max-width: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto;\n`;\nconst TechName = styled.div`\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 700;\n`;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IProps {\n} \n\ninterface IState {\n}\n\nclass DividerComponent extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <CardDivider />\n    );\n  }\n}\n\nexport default DividerComponent;\n\nconst CardDivider = styled.hr`\n  border: 0;\n  height: 1px;\n  background: #b52e31;\n  background-image: linear-gradient(90deg,#b52e31,#fff,#fff);\n  margin-bottom: 10px;\n`;","import React from 'react';\nimport styled from 'styled-components';\n\ninterface IData {\n  isShow?: boolean,\n  id: number,\n  sumUp: string,\n}\ninterface IProps {\n  data: IData,\n} \n\ninterface IState {\n}\n\nclass PortfolioIcon extends React.Component<IProps, IState> {\n  render() {\n    return (\n      <PortfolioIconContainer>\n        <PortfolioTitle>{this.props.data.sumUp}</PortfolioTitle>\n      </PortfolioIconContainer>\n    );\n  }\n}\n\nexport default PortfolioIcon;\n\nconst PortfolioIconContainer = styled.div`\n  overflow: hidden;\n  position: relative;\n`;\nconst PortfolioIamage = styled.img`\n  max-width: 100%;\n  vertical-align: middle;\n  margin: auto 0;\n`;\nconst PortfolioTitle = styled.ul`\n  font-size: 14px;\n  list-style:none;\n  padding-left: 10px;\n  height: 100%;\n  width: 100%;\n  padding-top: 0px;\n  margin: 5px;\n`;","export const types = {\n  ABOUT_REQUEST: 'ABOUT/ABOUT_REQUEST',\n  ABOUT_SUCCESS: 'ABOUT/ABOUT_SUCCESS',\n  ABOUT_FAIL: 'ABOUT/ABOUT_FAIL',\n};\n  \nexport const initialState = {\n  data: {},\n};\n\ninterface iAction {\n  type: string,\n  about: string,\n}\n  \nexport default (state = initialState, action: iAction) => {\n  switch (action.type) {\n    case types.ABOUT_SUCCESS:\n      return Object.assign({}, state, {\n        data: action.about,\n      });\n    default:\n      return state;\n  }\n};\n  \nexport const actions = {\n  requestAbout: () => ({ type: types.ABOUT_REQUEST }),\n};","export const types = {\n    EDUCATION_REQUEST: 'EDUCATION/EDUCATION_REQUEST',\n    EDUCATION_SUCCESS: 'EDUCATION/EDUCATION_SUCCESS',\n    EDUCATION_FAIL: 'EDUCATION/EDUCATION_FAIL',\n  };\n  \n  export const initialState = {\n    data: {},\n  };\n\n  interface iAction {\n    type: string,\n    education: string,\n  }\n  \n  export default (state = initialState, action: iAction) => {\n    switch (action.type) {\n      case types.EDUCATION_SUCCESS:\n        return Object.assign({}, state, {\n          data: action.education,\n        });\n      default:\n        return state;\n    }\n  };\n  \n  export const actions = {\n    requestEducation: () => ({ type: types.EDUCATION_REQUEST }),\n  };","export const types = {\n    EXPERIENCE_REQUEST: 'EXPERIENCE/EXPERIENCE_REQUEST',\n    EXPERIENCE_SUCCESS: 'EXPERIENCE/EXPERIENCE_SUCCESS',\n    EXPERIENCE_FAIL: 'EXPERIENCE/EXPERIENCE_FAIL',\n  };\n  \n  export const initialState = {\n    data: {},\n  };\n\n  interface iAction {\n    type: string,\n    experience: string,\n  }\n  \n  export default (state = initialState, action: iAction) => {\n    switch (action.type) {\n      case types.EXPERIENCE_SUCCESS:\n        return Object.assign({}, state, {\n          data: action.experience,\n        });\n      default:\n        return state;\n    }\n  };\n  \n  export const actions = {\n    requestExperience: () => ({ type: types.EXPERIENCE_REQUEST }),\n  };","export const types = {\n    PORTFOLIO_REQUEST: 'PORTFOLIO/PORTFOLIO_REQUEST',\n    PORTFOLIO_SUCCESS: 'PORTFOLIO/PORTFOLIO_SUCCESS',\n    PORTFOLIO_FAIL: 'PORTFOLIO/PORTFOLIO_FAIL',\n  };\n  \n  export const initialState = {\n    data: {},\n  };\n\n  interface iAction {\n    type: string,\n    portfolio: string,\n  }\n  \n  export default (state = initialState, action: iAction) => {\n    switch (action.type) {\n      case types.PORTFOLIO_SUCCESS:\n        return Object.assign({}, state, {\n          data: action.portfolio,\n        });\n      default:\n        return state;\n    }\n  };\n  \n  export const actions = {\n    requestPortfolio: () => ({ type: types.PORTFOLIO_REQUEST }),\n  };","  \nexport const types = {\n    TECHNOLOGY_REQUEST: 'TECHNOLOGY/TECHNOLOGY_REQUEST',\n    TECHNOLOGY_SUCCESS: 'TECHNOLOGY/TECHNOLOGY_SUCCESS',\n    TECHNOLOGY_FAIL: 'TECHNOLOGY/TECHNOLOGY_FAIL',\n  };\n  \n  export const initialState = {\n    data: {},\n  };\n\n  interface iAction {\n    type: string,\n    technology: string,\n  }\n  \n  export default (state = initialState, action:iAction) => {\n    switch (action.type) {\n      case types.TECHNOLOGY_SUCCESS:\n        return Object.assign({}, state, {\n          data: action.technology,\n        });\n      default:\n        return state;\n    }\n  };\n  \n  export const actions = {\n    requestTechnology: () => ({ type: types.TECHNOLOGY_REQUEST }),\n  };","import React from 'react';\nimport styled from 'styled-components';\n\nconst ResumeLayoutGrid = styled.div`\n  display: grid;\n  grid-template-areas: \"l-pad main-area r-pad\";\n  grid-template-columns: auto 1200px auto;\n  margin-top: 5px;\n  @media only screen and (max-width: 1200px) and (min-width: 600px) {\n    grid-template-columns: 0px auto 0px;\n  }\n  @media only screen and (max-width: 599px) {\n    grid-template-areas: \"main-area\";\n    grid-template-columns: auto;\n  }\n`;\n\ninterface IProps {\n  children: React.ReactNode\n} \n\nclass ResumeLayout extends React.Component<IProps> {\n  constructor(prop: IProps) {\n    super(prop);\n  };\n  render() {\n    return (\n      <ResumeLayoutGrid>\n        {this.props.children}\n      </ResumeLayoutGrid>\n    );\n  }\n}\n\nexport default ResumeLayout;","// import Loadable from 'react-loadable';\nimport Loadable from 'react-loadable';\nimport { Loading } from './components';\n\nconst fakeDelay = (ms:number) => new Promise((resolve) => {\n    setTimeout(resolve, ms);\n});\n\nconst About = Loadable({\n  loader: () => import('./containers/About/About'),\n  loading: Loading,\n});\n\nconst Resume = Loadable({\n   loader: () => import('./containers/Resume/Resume'),\n   loading: Loading,\n});\n\nconst Experience = Loadable({\n  loader: () => import('./containers/Experience/Experience'),\n  loading: Loading,\n});\nconst Technology = Loadable({\n  loader: () => import('./containers/Technology/Technology'),\n  loading: Loading,\n});\nconst Education = Loadable({\n  loader: () => import('./containers/Education/Education'),\n  loading: Loading,\n});\nconst Portfolio = Loadable({\n  loader: () => import('./containers/Portfolio/Portfolio'),\n  loading: Loading,\n});\n\nexport { About, Experience, Technology, Education, Portfolio, Resume };","import React from 'react';\nimport { HashRouter, Route, Switch, RouteComponentProps,  RouteProps } from 'react-router-dom';\nimport ResumeLayout from './ResumeLayout/ResumeLayout';\nimport { Resume } from '../loadableCons';\n\ninterface ResumeLayoutProps {\n  children: React.ReactNode\n}\n\ninterface AppRouteProps extends RouteProps{\n  Layout: React.ComponentClass<ResumeLayoutProps>,\n  Component: (props: RouteComponentProps) => JSX.Element,\n}\n\nconst AppRoute = ({ Component, Layout, ...rest }: any) => (\n  <Route\n    {...rest}\n    render={props => (\n      <Layout>\n        <Component {...props} />\n      </Layout>\n    )}\n  />\n);\n  \nexport default () => (\n  <HashRouter>\n    <Switch>\n      <AppRoute exact path=\"/\" Layout={ResumeLayout} Component={Resume} />\n    </Switch>\n  </HashRouter>\n);","import { combineReducers } from 'redux';\n\nimport about from './about/about';\nimport education from './education/education';\nimport experience from './experience/experience';\nimport portfolio from './portfolio/portfolio';\nimport technology from './technology/technology';\n\nexport default combineReducers({\n  about,\n  education,\n  experience,\n  portfolio,\n  technology,\n});","export default {\n    apiKey: 'AIzaSyBFMzaucx4Bz26SafXnR-P3IU13cKUOvSA',\n    authDomain: 'resume-template-db588.firebaseio.com',\n    databaseURL: 'https://resume-template-db588.firebaseio.com',\n    projectId: 'resume-template-db588',\n}","import firebase from 'firebase';\nimport ReduxSagaFirebase from 'redux-saga-firebase';\nimport config  from  '../config';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: config.apiKey,\n  authDomain: config.authDomain,\n  databaseURL: config.databaseURL,\n  projectId: config.projectId,\n});\n\nconst rsf = new ReduxSagaFirebase(firebaseApp);\n\nexport default rsf;","import { put, takeLatest, call } from 'redux-saga/effects';\nimport rsf from '../rsf';\n\nimport { types as aboutTypes } from './about';\n\nfunction* aboutWillFetch() {\n  try {\n    const about = yield call(rsf.database.read, 'about');\n    yield put({ type: aboutTypes.ABOUT_SUCCESS, about });\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nconst aboutSaga = [\n  takeLatest(aboutTypes.ABOUT_REQUEST, aboutWillFetch),\n];\n\nexport default aboutSaga;","import { put, takeLatest, call } from 'redux-saga/effects';\nimport rsf from '../rsf';\n\nimport { types as experienceTypes } from './experience';\n\nfunction* experienceWillFetch() {\n  try {\n    const experience = yield call(rsf.database.read, 'experience');\n    yield put({ type: experienceTypes.EXPERIENCE_SUCCESS, experience });\n  } catch (e) {\n    // console.log(e);\n  }\n}\n\nconst experienceSaga = [\n  takeLatest(experienceTypes.EXPERIENCE_REQUEST, experienceWillFetch),\n];\n\nexport default experienceSaga;","import { put, takeLatest, call } from 'redux-saga/effects';\nimport rsf from '../rsf';\n\nimport { types as technologyTypes } from './technology';\n\nfunction* technologyWillFetch() {\n  try {\n    const technology = yield call(rsf.database.read, 'skills');\n    yield put({ type: technologyTypes.TECHNOLOGY_SUCCESS, technology });\n  } catch (e) {\n    // console.log(e);\n  }\n}\n\nconst technologySaga = [\n  takeLatest(technologyTypes.TECHNOLOGY_REQUEST, technologyWillFetch),\n];\n\nexport default technologySaga;\n","import { put, takeLatest, call } from 'redux-saga/effects';\nimport rsf from '../rsf';\n\nimport { types as educationTypes } from './education';\n\nfunction* educationWillFetch() {\n  try {\n    const education = yield call(rsf.database.read, 'education');\n    yield put({ type: educationTypes.EDUCATION_SUCCESS, education });\n  } catch (e) {\n    // console.log(e);\n  }\n}\n\nconst educationSaga = [\n  takeLatest(educationTypes.EDUCATION_REQUEST, educationWillFetch),\n];\n\nexport default educationSaga;","import { put, takeLatest, call } from 'redux-saga/effects';\nimport rsf from '../rsf';\n\nimport { types as portfolioTypes } from './portfolio';\n\nfunction* portfolioWillFetch() {\n  try {\n    const portfolio = yield call(rsf.database.read, 'portfolio');\n    yield put({ type: portfolioTypes.PORTFOLIO_SUCCESS, portfolio });\n  } catch (e) {\n    // console.log(e);\n  }\n}\n\nconst portfolioSaga = [\n  takeLatest(portfolioTypes.PORTFOLIO_REQUEST, portfolioWillFetch),\n];\n\nexport default portfolioSaga;\n","import { all } from 'redux-saga/effects';\n\nimport aboutSaga from './about/aboutSaga';\nimport experienceSaga from './experience/experienceSaga';\nimport technologySaga from './technology/technologySaga';\nimport educationSaga from './education/educationSaga';\nimport portfolioSaga from './portfolio/portfolioSaga';\n\nexport default function* mySaga() {\n  yield all([\n    ...aboutSaga,\n    ...experienceSaga,\n    ...technologySaga,\n    ...educationSaga,\n    ...portfolioSaga,\n  ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from './sagaDucks/_reducers';\nimport mySaga from './sagaDucks/_sagas';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n// mount it on the Store\nexport default createStore(\n  reducer,\n  applyMiddleware(sagaMiddleware),\n);\n\n// then run the saga\nsagaMiddleware.run(mySaga);\n\n// render the application","import React from 'react';\nimport { Provider } from 'react-redux';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createGlobalStyle } from 'styled-components';\nimport Routes from './routes';\nimport store from './store';\n\n// Global style\n// eslint-disable-next-line\ncreateGlobalStyle`\n  body {\n    margin: 0;\n    background: #F5F5F5;\n    font-family:\"Open Sans\", Arial, sans-serif;\n  }\n`;\n\nexport default () => (\n  <Provider store={store} >\n    <Routes />\n  </Provider>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}